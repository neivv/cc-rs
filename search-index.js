var searchIndex = {};
searchIndex["cc"] = {"doc":"A library for build scripts to compile custom C code","items":[[3,"Build","cc","A builder for compilation of a native static library.",null,null],[3,"Error","","Represents an internal error that occurred, with an explanation.",null,null],[3,"Tool","","Configuration used to represent an invocation of a C compiler.",null,null],[0,"windows_registry","","A helper module to probe the Windows Registry when looking for windows-specific tools.",null,null],[4,"VsVers","cc::windows_registry","A version of Visual Studio",null,null],[13,"Vs12","","Visual Studio 12 (2013)",0,null],[13,"Vs14","","Visual Studio 14 (2015)",0,null],[13,"Vs15","","Visual Studio 15 (2017)",0,null],[5,"find","","Attempts to find a tool within an MSVC installation using the Windows registry as a point to search from.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"generics":["command"],"name":"option"}}],[5,"find_tool","","Similar to the `find` function above, this function will attempt the same operation (finding a MSVC tool in a local install) but instead returns a `Tool` which may be introspected.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"generics":["tool"],"name":"option"}}],[5,"find_vs_version","","Find the most recent installed version of Visual Studio",null,{"inputs":[],"output":{"generics":["vsvers","string"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"vsvers"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"vsvers"}}],[11,"clone","cc","",1,{"inputs":[{"name":"self"}],"output":{"name":"build"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"tool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new instance of a blank set of configuration.",1,{"inputs":[],"output":{"name":"build"}}],[11,"include","","Add a directory to the `-I` or include path for headers",1,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"build"}}],[11,"define","","Specify a `-D` variable with an optional value.",1,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"build"}}],[11,"object","","Add an arbitrary object file to link in",1,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"build"}}],[11,"flag","","Add an arbitrary flag to the invocation of the compiler",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"build"}}],[11,"is_flag_supported","","Run the compiler to test if it accepts the given flag.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["bool","error"],"name":"result"}}],[11,"flag_if_supported","","Add an arbitrary flag to the invocation of the compiler if it supports it",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"build"}}],[11,"shared_flag","","Set the `-shared` flag.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"build"}}],[11,"static_flag","","Set the `-static` flag.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"build"}}],[11,"file","","Add a file which will be compiled",1,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"build"}}],[11,"files","","Add files which will be compiled",1,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"build"}}],[11,"cpp","","Set C++ support.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"build"}}],[11,"cuda","","Set CUDA C++ support.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"build"}}],[11,"warnings_into_errors","","Set warnings into errors flag.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"build"}}],[11,"warnings","","Set warnings flags.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"build"}}],[11,"cpp_link_stdlib","","Set the standard library to link against when compiling with C++ support.",1,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"build"}}],[11,"cpp_set_stdlib","","Force the C++ compiler to use the specified standard library.",1,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"build"}}],[11,"target","","Configures the target this configuration will be compiling for.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"build"}}],[11,"host","","Configures the host assumed by this configuration.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"build"}}],[11,"opt_level","","Configures the optimization level of the generated object files.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"build"}}],[11,"opt_level_str","","Configures the optimization level of the generated object files.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"build"}}],[11,"debug","","Configures whether the compiler will emit debug information when generating object files.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"build"}}],[11,"out_dir","","Configures the output directory where all object files and static libraries will be located.",1,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"build"}}],[11,"compiler","","Configures the compiler to be used to produce output.",1,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"build"}}],[11,"archiver","","Configures the tool used to assemble archives.",1,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"build"}}],[11,"cargo_metadata","","Define whether metadata should be emitted for cargo allowing it to automatically link the binary. Defaults to `true`.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"build"}}],[11,"pic","","Configures whether the compiler will emit position independent code.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"build"}}],[11,"static_crt","","Configures whether the /MT flag or the /MD flag will be passed to msvc build tools.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"build"}}],[11,"try_compile","","Run the compiler, generating the file `output`",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["error"],"name":"result"}}],[11,"compile","","Run the compiler, generating the file `output`",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"try_expand","","This will return a result instead of panicing; see expand() for the complete description.",1,{"inputs":[{"name":"self"}],"output":{"generics":["vec","error"],"name":"result"}}],[11,"expand","","Run the compiler, returning the macro-expanded version of the input files.",1,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"get_compiler","","Get the compiler that's in use for this configuration.",1,{"inputs":[{"name":"self"}],"output":{"name":"tool"}}],[11,"try_get_compiler","","Get the compiler that's in use for this configuration.",1,{"inputs":[{"name":"self"}],"output":{"generics":["tool","error"],"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"build"}}],[11,"to_command","","Converts this compiler into a `Command` that's ready to be run.",3,{"inputs":[{"name":"self"}],"output":{"name":"command"}}],[11,"path","","Returns the path for this compiler.",3,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"args","","Returns the default set of arguments to the compiler needed to produce executables for the target this compiler generates.",3,null],[11,"env","","Returns the set of environment variables needed for this compiler to operate.",3,null],[11,"cc_env","","Returns the compiler command in format of CC environment variable. Or empty string if CC env was not present",3,{"inputs":[{"name":"self"}],"output":{"name":"osstring"}}],[11,"cflags_env","","Returns the compiler flags in format of CFLAGS environment variable. Important here - this will not be CFLAGS from env, its internal gcc's flags to use as CFLAGS This is typically used by configure script",3,{"inputs":[{"name":"self"}],"output":{"name":"osstring"}}],[11,"is_like_gnu","","Whether the tool is GNU Compiler Collection-like.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_like_clang","","Whether the tool is Clang-like.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_like_msvc","","Whether the tool is MSVC-like.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[4,"VsVers"],[3,"Build"],[3,"Error"],[3,"Tool"]]};
searchIndex["gcc_shim"] = {"doc":"","items":[],"paths":[]};
initSearch(searchIndex);
